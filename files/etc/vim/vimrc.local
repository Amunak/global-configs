scriptencoding utf-8
set encoding=utf-8

"" Syntax highlighting
filetype indent plugin on
syntax on

"augroup numbertoggle
"  autocmd!
"  autocmd BufEnter,FocusGained,InsertLeave,WinEnter * if &nu | set rnu   | endif
"  autocmd BufLeave,FocusLost,InsertEnter,WinLeave   * if &nu | set nornu | endif
"augroup END

"" Paste Toggle
nnoremap <F2> :set invpaste paste?<CR>
set pastetoggle=<F2>

"" Number Toggle
nnoremap <F3> :set invnumber invrelativenumber<CR>

"" Show whitespace toggle
nnoremap <F4> :set invlist<CR>

"" Allow saving of files as sudo
ca w!! w !sudo tee > /dev/null %

"" Additional syntax highlighting
au BufRead,BufNewFile /etc/nginx/*,/usr/local/nginx/conf/* if &ft == '' | setfiletype nginx | source /etc/vim/syntax/nginx.vim | endif
au BufRead,BufNewFile /etc/nftables*,*.nft,nftables.conf setfiletype nftables | source /etc/vim/syntax/nftables.vim

"" General
set modeline
set showmode
set wildmenu
set showcmd
set backspace=indent,eol,start
set nostartofline
set confirm
set background=dark
""set mouse=a

set number      " Show line numbers
set relativenumber
set nowrap      " Wrap lines
set linebreak   " Break lines at word (requires Wrap lines)
set showbreak=+++       " Wrap-broken line prefix
"set textwidth=100      " Line wrap (number of cols)
set showmatch   " Highlight matching brace
set visualbell  " Use visual bell (no beeping)

set hlsearch    " Highlight all search results
set smartcase   " Enable smart-case search
set ignorecase  " Always case-insensitive
set incsearch   " Searches for strings incrementally

set autoindent  " Auto-indent new lines
set shiftwidth=4        " Number of auto-indent spaces
set smartindent " Enable smart-indent
set smarttab    " Enable smart-tabs
set softtabstop=4       " Number of spaces per Tab

"" Advanced
set undolevels=1000     " Number of undo levels
set backspace=indent,eol,start  " Backspace behaviour

"" Formatting
set noexpandtab
set copyindent
set preserveindent
set softtabstop=0
set shiftwidth=4
set tabstop=4

"" Whitespace characters
if has("patch-7.4.710")
	set listchars=eol:$,tab:>\ ,trail:~,extends:>,precedes:<,space:Â·
else
	set listchars=eol:$,tab:>\ ,trail:~,extends:>,precedes:<
endif
